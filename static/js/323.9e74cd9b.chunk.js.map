{"version":3,"file":"static/js/323.9e74cd9b.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","webpack://phonebook/./src/components/Phonebook/ContactForm/ContactForm.module.css?f727","components/Phonebook/ContactForm/ContactForm.jsx","webpack://phonebook/./src/components/Phonebook/Filter/Filter.styled.module.css?ad73","components/Phonebook/Filter/Filter.jsx","webpack://phonebook/./src/components/Phonebook/ContactList/ContactListItem/ContactListItem.module.css?5134","components/Phonebook/ContactList/ContactListItem/ContactListItem.jsx","webpack://phonebook/./src/components/Phonebook/ContactList/ContactList.module.css?f152","components/Phonebook/ContactList/ContactList.jsx","webpack://phonebook/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["const selectFilter = state => state.filter;\n\nexport default selectFilter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport selectFilter from '../filter/filter-selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__xMklr\",\"inputWrap\":\"ContactForm_inputWrap__+Vvxi\",\"label\":\"ContactForm_label__YXYvo\",\"formInput\":\"ContactForm_formInput__mZh8E\",\"formButton\":\"ContactForm_formButton__WtH4A\",\"loaderWrapper\":\"ContactForm_loaderWrapper__phGVA\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport { toast } from 'react-toastify';\nimport {\n  selectContacts,\n  selectIsLoading,\n} from '../../../redux/contacts/contacts-selectors';\nimport { addContact } from '../../../redux/contacts/contacts-operations';\nimport { Bars } from 'react-loader-spinner';\nimport css from './ContactForm.module.css';\nimport { useEffect, useState } from 'react';\n\nconst formNameId = nanoid();\nconst fornNumberId = nanoid();\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n  const loading = useSelector(selectIsLoading);\n  const [IsSubmitted, SetIsSubmitted] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    const isExist = items\n      .map(({ name }) => name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (isExist) {\n      return toast.warning(`${name} is already in contacts.`);\n    }\n\n    SetIsSubmitted(true);\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!loading) {\n      SetIsSubmitted(false);\n    }\n  }, [loading]);\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.inputWrap}>\n        <label className={css.label} htmlFor={formNameId}>\n          Name\n        </label>\n        <input\n          className={css.formInput}\n          id={formNameId}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          required\n        />\n      </div>\n      <div className={css.inputWrap}>\n        <label className={css.label} htmlFor={fornNumberId}>\n          Number\n        </label>\n        <input\n          className={css.formInput}\n          id={fornNumberId}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          required\n        />\n      </div>\n      <button className={css.formButton} type=\"submit\">\n        {!IsSubmitted && 'Add contact'}\n        {IsSubmitted && loading && (\n          <div className={css.loaderWrapper}>\n            <Bars visible={true} width=\"20\" color=\"MidnightBlue\" />\n          </div>\n        )}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrapper\":\"Filter_styled_filterWrapper__O4Xib\",\"filterLabel\":\"Filter_styled_filterLabel__lAwSm\",\"filterInput\":\"Filter_styled_filterInput__uaENm\"};","import { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\n\nimport css from './Filter.styled.module.css';\nimport { setFilter } from '../../../redux/filter/filter-slice';\n\nconst filterId = nanoid();\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const filter = e.currentTarget.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div className={css.filterWrapper}>\n      <label className={css.filterLabel} htmlFor={filterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={css.filterInput}\n        id={filterId}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__KnjKe\",\"button\":\"ContactListItem_button__McG9M\",\"loaderWrapper\":\"ContactListItem_loaderWrapper__b149z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { deleteContact } from '../../../../redux/contacts/contacts-operations';\nimport { selectIsLoading } from '../../../../redux/contacts/contacts-selectors';\nimport { Bars } from 'react-loader-spinner';\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ item: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectIsLoading);\n  const [IsClicked, SetIsClicked] = useState(false);\n\n  const handleClick = () => {\n    dispatch(deleteContact(id));\n    SetIsClicked(true);\n  };\n\n  useEffect(() => {\n    if (!loading) {\n      SetIsClicked(false);\n    }\n  }, [loading]);\n\n  return (\n    <li className={css.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        className={css.button}\n        id={id}\n        type=\"button\"\n        onClick={handleClick}\n      >\n        {!IsClicked && 'Delete'}\n        {IsClicked && loading && (\n          <div className={css.loaderWrapper}>\n            <Bars visible={true} width=\"20\" color=\"MidnightBlue\" />\n          </div>\n        )}\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__lyie7\"};","import { useSelector } from 'react-redux';\n\nimport ContactListItem from './ContactListItem';\nimport { selectFilteredContacts } from '../../../redux/contacts/contacts-selectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const items = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.list}>\n      {items.map(item => {\n        return <ContactListItem key={item.id} item={item} />;\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"commonWrapper\":\"Phonebook_commonWrapper__BQ0wo\",\"errorWrapper\":\"Phonebook_errorWrapper__iel7U\",\"loaderWrapper\":\"Phonebook_loaderWrapper__Ku-n8\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport {\n  selectIsLoading,\n  selectError,\n} from '../../redux/contacts/contacts-selectors';\nimport { Bars } from 'react-loader-spinner';\nimport css from './Phonebook.module.css';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const [isMounted, setIsMounted] = useState(false);\n  const { isLoading } = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    setIsMounted(true);\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!isLoading) setIsMounted(false);\n  }, [isLoading]);\n\n  return (\n    <div className={css.commonWrapper}>\n      <ContactForm />\n\n      <Filter />\n      {isMounted && isLoading && !error && (\n        <div className={css.loaderWrapper}>\n          <Bars color=\"MidnightBlue\" height=\"40\" width=\"40\" />\n        </div>\n      )}\n      {error && (\n        <h2 className={css.errorWrapper}>\n          Sorry, an error occurred. Please, try again\n        </h2>\n      )}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/Phonebook';\n\nconst PhonebookPage = () => {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","selectFilter","normalizedFilter","toLocaleLowerCase","_ref","name","includes","formNameId","nanoid","fornNumberId","ContactForm","dispatch","useDispatch","useSelector","loading","IsSubmitted","SetIsSubmitted","useState","useEffect","_jsxs","className","css","onSubmit","e","preventDefault","form","currentTarget","value","number","map","toLowerCase","toast","warning","concat","addContact","reset","children","_jsx","htmlFor","id","type","autoComplete","required","Bars","visible","width","color","filterId","Filter","onChange","setFilter","item","IsClicked","SetIsClicked","onClick","handleClick","deleteContact","ContactList","ContactListItem","Phonebook","isMounted","setIsMounted","fetchContacts","height","PhonebookPage"],"sourceRoot":""}