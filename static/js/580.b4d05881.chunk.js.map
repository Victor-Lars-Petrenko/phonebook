{"version":3,"file":"static/js/580.b4d05881.chunk.js","mappings":"qJACA,QAA4B,6BAA5B,EAA0E,kCAA1E,EAAyH,8BAAzH,EAAwK,kCAAxK,EAA4N,mC,aCG5N,MAAMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IA4DZ,EAzDkBC,IAAmB,IAAlB,SAAEC,GAAUD,EAC7B,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAAKR,IAElCS,EAAeC,IAAiB,IAAhB,OAAEC,GAAQD,EAC9B,MAAM,KAAET,EAAI,MAAEW,GAAUD,EACxBJ,EAAS,IACJD,EACH,CAACL,GAAOW,GACR,EAQEC,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,UAEb,MAAEZ,EAAK,SAAEC,GAAaG,EAC5B,OACEU,EAAAA,EAAAA,MAAA,QAAMX,SAVaY,IACnBA,EAAEC,iBACFb,EAAS,IAAKC,GAAQ,EAQQa,UAAWC,EAAcC,SAAA,EACrDL,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAgBG,QAASV,EAAQQ,SAAC,YAGpDC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXR,MAAOV,EACPsB,SAAUf,EACVgB,KAAK,QACLxB,KAAK,QACLyB,GAAIb,EACJc,UAAQ,QAGZX,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAgBG,QAASR,EAAWM,SAAC,eAGvDC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXR,MAAOT,EACPqB,SAAUf,EACVgB,KAAK,WACLxB,KAAK,WACLyB,GAAIX,EACJY,UAAQ,QAGZL,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAqBK,KAAK,SAAQJ,SAAC,aAGjD,E,wCClDX,MAuBA,EAvBkBO,KAChB,MAAMC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAMxBC,GAAWC,EAAAA,EAAAA,MAMjB,OACEnB,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CACGQ,IAAgBG,IAAaV,EAAAA,EAAAA,KAACc,EAAAA,EAAM,KACrCd,EAAAA,EAAAA,KAACe,EAAS,CAAChC,SAPKiC,IAClBJ,GAASK,EAAAA,EAAAA,IAAMD,GAAM,IAOlBN,GAAaQ,EAAAA,GAAMC,MAAMT,KAAcV,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,MACpC,C","sources":["webpack://phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"LoginForm_loginForm__+koOR\",\"loginInputWrap\":\"LoginForm_loginInputWrap__AeILx\",\"loginLabel\":\"LoginForm_loginLabel__8yEkW\",\"loginFormInput\":\"LoginForm_loginFormInput__15CeX\",\"loginFormButton\":\"LoginForm_loginFormButton__alHXZ\"};","import { useState, useId } from 'react';\n\nimport css from './LoginForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n  };\n\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { email, password } = state;\n  return (\n    <form onSubmit={handleSubmit} className={css.loginForm}>\n      <div className={css.loginInputWrap}>\n        <label className={css.loginLabel} htmlFor={emailId}>\n          Email:\n        </label>\n        <input\n          className={css.loginFormInput}\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          id={emailId}\n          required\n        />\n      </div>\n      <div className={css.loginInputWrap}>\n        <label className={css.loginLabel} htmlFor={passwordId}>\n          Password:\n        </label>\n        <input\n          className={css.loginFormInput}\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          id={passwordId}\n          required\n        />\n      </div>\n      <button className={css.loginFormButton} type=\"submit\">\n        Log In\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport LoginForm from 'components/LoginForm';\n\nimport { login } from '../../redux/auth/auth-operations';\n\nimport {\n  selectAuthLoading,\n  selectAuthError,\n} from '../../redux/auth/auth-selectors';\nimport Loader from 'components/Loader';\nimport { toast } from 'react-toastify';\n\nconst LoginPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n\n  // if (authError) {\n  //   toast.error(authError);\n  // }\n\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <div>\n      {authLoading && !authError && <Loader />}\n      <LoginForm onSubmit={handleLogin} />\n      {authError && toast.error(authError) && <></>}\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","state","setState","useState","handleChange","_ref2","target","value","emailId","useId","passwordId","_jsxs","e","preventDefault","className","css","children","_jsx","htmlFor","onChange","type","id","required","LoginPage","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","Loader","LoginForm","data","login","toast","error","_Fragment"],"sourceRoot":""}